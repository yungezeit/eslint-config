module.exports = {
  env: {
    es6: true,
    browser: true,
    node: true,
  },
  ignorePatterns: [
    'CHANGELOG.md',
    'dist',
    'lib',
    'LICENSE*',
    'coverage',
    'public',
    'temp',
    'package-lock.json',
    'pnpm-lock.yaml',
    '__snapshots__',
    '!.github',
    '!.vitepress',
    '!.vscode',
  ],
  overrides: [
    // Source code.
    {
      files: [
        '*.js',
        '*.jsx',
        '*.cjs',
        '*.mjs',
        '*.ts',
        '*.tsx',
        '*.cts',
        '*.mts',
        '*.d.ts',
        '*.vue',
        '*.svelte',
      ],
      plugins: ['html'],
      extends: [
        'airbnb-base',
        'plugin:import/recommended',
      ],
      settings: {
        'import/resolver': {
          node: {
            extensions: [
              '.js',
              '.jsx',
              '.cjs',
              '.mjs',
              '.ts',
              '.tsx',
              '.cts',
              '.mts',
            ],
          },
        },
      },
      rules: {
        'func-call-spacing': 'off',
        'no-spaced-func': 'off',
        'import/no-relative-packages': 'off',
        'no-console': ['error', { allow: ['info', 'warn', 'error'] }],
        'no-restricted-globals': 'off',
        'no-restricted-syntax': 'off',
        'no-underscore-dangle': 'off',
        'no-promise-executor-return': 'off',
        'no-param-reassign': 'off',
        'no-sparse-arrays': 'off',
        'no-use-before-define': 'off',
        'no-unused-vars': ['error', { argsIgnorePattern: '^_', varsIgnorePattern: '^_' }],
        'class-methods-use-this': 'off',
        'import/no-extraneous-dependencies': 'off',
        'import/prefer-default-export': 'off',
        'import/no-named-as-default': 'off',
        'import/no-cycle': 'off',
        'import/extensions': ['error', 'always', {
          js: 'never',
          jsx: 'never',
          ts: 'never',
          tsx: 'never',
        }],
        'consistent-return': 'off',
        'object-curly-newline': ['error', {
          ImportDeclaration: 'never',
          ExportDeclaration: { multiline: true, minProperties: 3 },
        }],
      },
    },
    // JSON files.
    {
      files: ['*.json', '*.json5', '*.jsonc'],
      extends: ['plugin:jsonc/recommended-with-jsonc'],
    },
    // YAML files.
    {
      files: ['*.yaml', '*.yml'],
      extends: ['plugin:yml/standard'],
      rules: {
        'yml/no-empty-mapping-value': 'off',
      },
    },
    // Markdown files.
    {
      files: ['*.md'],
      extends: ['plugin:markdown/recommended'],
    },
    // Sort `package.json` properties.
    {
      files: ['package.json'],
      parser: 'jsonc-eslint-parser',
      rules: {
        'jsonc/sort-keys': [
          'error',
          {
            pathPattern: '^$',
            order: [
              'publisher',
              'name',
              'displayName',
              'type',
              'version',
              'private',
              'packageManager',
              'description',
              'author',
              'license',
              'funding',
              'homepage',
              'repository',
              'bugs',
              'keywords',
              'categories',
              'sideEffects',
              'exports',
              'main',
              'module',
              'unpkg',
              'jsdelivr',
              'types',
              'typesVersions',
              'bin',
              'icon',
              'files',
              'engines',
              'activationEvents',
              'contributes',
              'scripts',
              'peerDependencies',
              'peerDependenciesMeta',
              'dependencies',
              'optionalDependencies',
              'devDependencies',
              'pnpm',
              'overrides',
              'resolutions',
              'husky',
              'simple-git-hooks',
              'lint-staged',
              'eslintConfig',
            ],
          },
          {
            pathPattern: '^(?:dev|peer|optional|bundled)?[Dd]ependencies$',
            order: { type: 'asc' },
          },
          {
            pathPattern: '^exports.*$',
            order: [
              'types',
              'require',
              'import',
            ],
          },
        ],
      },
    },
  ],
};
